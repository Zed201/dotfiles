-- local frames = {
--   [[
--      ██╗      █████╗ ███████╗██╗   ██╗██╗   ██╗██╗███╗   ███╗          Z
--      ██║     ██╔══██╗╚══███╔╝╚██╗ ██╔╝██║   ██║██║████╗ ████║      Z
--      ██║     ███████║  ███╔╝  ╚████╔╝ ██║   ██║██║██╔████╔██║   z
--      ██║     ██╔══██║ ███╔╝    ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║ z
--      ███████╗██║  ██║███████╗   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║
--      ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝
-- ]],
--   [[
--      ██╗      █████╗ ███████╗██╗   ██╗██╗   ██╗██╗███╗   ███╗
--      ██║     ██╔══██╗╚══███╔╝╚██╗ ██╔╝██║   ██║██║████╗ ████║      Z
--      ██║     ███████║  ███╔╝  ╚████╔╝ ██║   ██║██║██╔████╔██║       Z
--      ██║     ██╔══██║ ███╔╝    ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║     z
--      ███████╗██║  ██║███████╗   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║      z
--      ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝
-- ]],
--   [[
--      ██╗      █████╗ ███████╗██╗   ██╗██╗   ██╗██╗███╗   ███╗
--      ██║     ██╔══██╗╚══███╔╝╚██╗ ██╔╝██║   ██║██║████╗ ████║
--      ██║     ███████║  ███╔╝  ╚████╔╝ ██║   ██║██║██╔████╔██║      Z
--      ██║     ██╔══██║ ███╔╝    ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║       Z
--      ███████╗██║  ██║███████╗   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║      z
--      ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝       z
-- ]],
--   [[
--      ██╗      █████╗ ███████╗██╗   ██╗██╗   ██╗██╗███╗   ███╗
--      ██║     ██╔══██╗╚══███╔╝╚██╗ ██╔╝██║   ██║██║████╗ ████║
--      ██║     ███████║  ███╔╝  ╚████╔╝ ██║   ██║██║██╔████╔██║
--      ██║     ██╔══██║ ███╔╝    ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║      Z
--      ███████╗██║  ██║███████╗   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║       Z
--      ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝     z
-- ]],
--   [[
--      ██╗      █████╗ ███████╗██╗   ██╗██╗   ██╗██╗███╗   ███╗
--      ██║     ██╔══██╗╚══███╔╝╚██╗ ██╔╝██║   ██║██║████╗ ████║
--      ██║     ███████║  ███╔╝  ╚████╔╝ ██║   ██║██║██╔████╔██║
--      ██║     ██╔══██║ ███╔╝    ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║
--      ███████╗██║  ██║███████╗   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║      Z
--      ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝       Z
-- ]],
-- }

local frames = {
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀ ⣠⣿⣿⣆ ⠀⠀⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀ ⡰⠿⠿⠿⠿⢆⠀ ⠀⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀ ⣴⣷⡀⠀⠀⢀⣾⣦⠀⠀ ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀ ⣼⣿⣿⣷⡀⢀⣾⣿⣿⣧  ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀ ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁ ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀ ⣠⣿⣿⣆ ⠀⠀⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀ ⡰⠿⠿⠿⠿⢆⠀ ⠀⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀ ⣴⣷⡀⠀⠀⢀⣾⣦⠀⠀ ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀ ⣼⣿⣿⣷⡀⢀⣾⣿⣿⣧  ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀ ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁ ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀ ⣠⣿⣿⣆ ⠀⠀⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀ ⡰⠿⠿⠿⠿⢆⠀ ⠀⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀ ⣴⣷⡀⠀⠀⢀⣾⣦⠀⠀ ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀ ⣼⣿⣿⣷⡀⢀⣾⣿⣿⣧  ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀ ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁ ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠ ⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣾⣇ ⠀⠀ ⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀  ⡰⠿⠿⢆⠀ ⠀ ⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀  ⣴⣷ ⠀⣾⣦⠀⠀  ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀  ⣼⣿⣷⡀⢀⣿⣿⣧   ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀  ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠁  ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀  
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀ ⢠⠀ ⠀⠀  ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣾⣇ ⠀⠀ ⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀  ⡰⠿⠿⠀ ⠀ ⠀ ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀  ⢀⣷  ⣷⠀⠀   ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀   ⣿⣿⡀⢀⣿⣧    ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀   ⠉⠉⠉⠉⠉⠉⠉⠁   ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀  
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀  ⢠⠀⠀ ⠀  ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣾ ⠀ ⠀ ⠀ ⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀  ⡰⠿⠀ ⠀⠀   ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀   ⣷ ⣷⠀⠀    ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀   ⡰⣿⢀⣿      ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀    ⠉⠉⠉⠉⠁   ⠀  ⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀ ⠀⢠⡄ ⠀ ⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⢸⡇ ⠀ ⠀ ⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀   ⠸⠇⠀  ⠀⠀ ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀    ⢸⡆⠀     ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀     ⢸⡇      ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀      ⠈⠁    ⠀  ⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀  
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀ ⠀⠀ ⡄⠀⠀   ⠈⢿⣿⣏⢀⡀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀ ⠀  ⣿ ⠀⠀  ⠀⠈⢿⣿⡁ ⣁⡀⠀ ⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀ ⠀   ⠿⢆⠀⠀⠀  ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀    ⣾ ⣾⠀    ⠀⠀⣿⣿⡦⠀⠀⠀⠀ 
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀     ⣿⡀⣿⢆    ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀      ⠉⠉⠉⠉  ⠀  ⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀  
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀  ⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣰⣿ ⠀⠀ ⠀ ⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀   ⠿⠿⢆ ⠀ ⠀ ⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀   ⣾  ⣾⡀⠀   ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀   ⣼⣿⡀⢀⣿⣿    ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀   ⠈⠉⠉⠉⠉⠉⠉⠉   ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
  [[
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⢀⣴⡖ ⠀⢀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀ ⣹⣷ ⣀⣴⠀⢀⣤⣶⡦⡀⠀⠀⠀⠀ ⠀
  ⠢⣀⠀⠀⠀⠀⠀⢄⠀⠈⣆⣠⣼⣿⣿⣿⣿⣿⣿⣦⣼⣏⠀⠀⠀⠀⠀⠀  ⠀
  ⠀⠈⠻⣶⣄⡀⠀⣨⣷⡿⠟⠋⠉⠉  ⠉⠉⠉⠛⠿⣿⣦⣀⠀⠀⠀⠀⠀ ⠀
  ⠀⠀⠀⠀⠙⢿⣿⡿⠋⠀⠀⠀⠀  ⡄⠀ ⠀⠀ ⠈⢿⣿⣏⢀⡀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⣼⡟⠀⠀⠀⠀⠀  ⣰⣿ ⠀⠀ ⠀⠀⠈⢿⣿⡁ ⣁⡀⠀⠀
  ⠀⠀⠀⠒⢺⣿⠁⠀⠀⠀⠀  ⡰⠿⠿⢆⠀ ⠀ ⠀⠀⠸⣿⡿⠛⠉⠀⠀⠀
  ⠀⠀⢀⢠⣾⣿⠀⠀⠀⠀  ⣴⣷ ⠀⣾⣦⠀⠀  ⠀⠀⣿⣿⡦⠀⠀⠀⠀
  ⠀⠀⠀⠀⣹⣿⠀⠀⠀  ⣼⣿⣿⡀⢀⣿⣿⣧   ⠀⢠⣿⡧⠤ ⠀⠀⠀
  ⠀⠀⠀⠈⠛⢿⣆⠀  ⠈⠉⠉⠉⠉⠉⠉⠉⠉⠁  ⠀⣼⡿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⢀⣾⣿⣷⣄⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠚⢻⣿⣿⣦⣄⡀⠀⠀⠀⠀  ⢀⣠⣶⣿⡋⠀⠈⠙⠻⣄⠀⠀ 
  ⠀⠀⠀⠀⠀⠀⠀⢀⣿⠿⢿⣿⣿⣿⣶⣶⣿⡿⠻⣏⠀⠛⠄⠀⠀⠀⠀⠈⠃⠄ 
  ⠀⠀⠀⠀⠀ ⡰⠛ ⠀⠸⠋⠻⣿⣁⠀⠁⠀⠀⠈⠀  ⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀

]],
}

return {
  "goolord/alpha-nvim",
  event = "VimEnter",
  enabled = true,
  init = false,
  opts = function()
    local dashboard = require("alpha.themes.dashboard")

    dashboard.section.header.val = vim.split(frames[1], "\n")

    dashboard.section.buttons.val = {
      dashboard.button("f", " " .. " Find file", "<cmd> lua LazyVim.pick()() <cr>"),
      dashboard.button("n", " " .. " New file", [[<cmd> ene <BAR> startinsert <cr>]]),
      dashboard.button("r", " " .. " Recent files", [[<cmd> lua LazyVim.pick("oldfiles")() <cr>]]),
      dashboard.button("g", " " .. " Find text", [[<cmd> lua LazyVim.pick("live_grep")() <cr>]]),
      dashboard.button("c", " " .. " Config", "<cmd> lua LazyVim.pick.config_files()() <cr>"),
      dashboard.button("s", " " .. " Restore Session", [[<cmd> lua require("persistence").load() <cr>]]),
      dashboard.button("x", " " .. " Lazy Extras", "<cmd> LazyExtras <cr>"),
      dashboard.button("l", "󰒲 " .. " Lazy", "<cmd> Lazy <cr>"),
      dashboard.button("q", " " .. " Quit", "<cmd> qa <cr>"),
    }

    for _, button in ipairs(dashboard.section.buttons.val) do
      button.opts.hl = "AlphaButtons"
      button.opts.hl_shortcut = "AlphaShortcut"
    end

    dashboard.section.header.opts.hl = "AlphaHeader"
    dashboard.section.buttons.opts.hl = "AlphaButtons"
    dashboard.section.footer.opts.hl = "AlphaFooter"
    dashboard.opts.layout[1].val = 8

    return dashboard
  end,

  config = function(_, dashboard)
    local frame_index = 1
    local timer = vim.loop.new_timer()

    require("alpha").setup(dashboard.opts)

    local function update_frame()
      frame_index = frame_index + 1
      if frame_index > #frames then
        frame_index = 1
      end
      dashboard.section.header.val = vim.split(frames[frame_index], "\n")
      pcall(vim.cmd.AlphaRedraw)
    end

    timer:start(0, 150, vim.schedule_wrap(update_frame))

    vim.api.nvim_create_autocmd({ "BufUnload", "BufLeave" }, {
      buffer = 0,
      once = true,
      callback = function()
        if timer and not timer:is_closing() then
          timer:stop()
          timer:close()
          timer = nil
        end
      end,
    })

    if vim.o.filetype == "lazy" then
      vim.cmd.close()
      vim.api.nvim_create_autocmd("User", {
        once = true,
        pattern = "AlphaReady",
        callback = function()
          require("lazy").show()
        end,
      })
    end

    vim.api.nvim_create_autocmd("User", {
      once = true,
      pattern = "LazyVimStarted",
      callback = function()
        local stats = require("lazy").stats()
        local ms = (math.floor(stats.startuptime * 100 + 0.5) / 100)
        dashboard.section.footer.val = "⚡ Neovim loaded "
          .. stats.loaded
          .. "/"
          .. stats.count
          .. " plugins in "
          .. ms
          .. "ms"
        pcall(vim.cmd.AlphaRedraw)
      end,
    })
  end,
}
